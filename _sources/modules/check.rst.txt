
check -- Manages Sensu checks
=============================

.. contents::
   :local:
   :depth: 1

Synopsis
--------
- For more information, refer to the Sensu documentation at https://docs.sensu.io/sensu-go/latest/reference/checks/



Parameters
----------

- annotations ({'description': ['Custom metadata fields with fewer restrictions, as key/value pairs.', 'These are preserved by Sensu but not accessible as tokens or identifiers, and are mainly intended for use with external tools.'], 'type': 'dict'})
- auth ({'description': 'Authentication parameters. Can define each of them with ENV as well', 'type': 'dict', 'suboptions': {'user': {'description': ['The username to use for connecting to the Sensu API. If this is not set the value of the SENSU_USER environment variable will be checked.'], 'type': 'str', 'default': 'admin'}, 'password': {'description': ["The Sensu user's password. If this is not set the value of the SENSU_PASSWORD environment variable will be checked."], 'type': 'str', 'default': 'P@ssw0rd!'}, 'url': {'description': ['Location of the Sensu backend API. If this is not set the value of the SENSU_URL environment variable will be checked.'], 'type': 'str', 'default': 'http://localhost:8080'}, 'namespace': {'description': ['RBAC namespace to operate in. If this is not set the value of the SENSU_NAMESPACE environment variable will be checked.'], 'type': 'str', 'default': 'default'}}})
- check_hooks ({'description': ['A mapping of response codes to hooks which will be run by the agent when that code is returned.'], 'type': 'dict'})
- command ({'description': ['Check command to run.'], 'type': 'str', 'required': True})
- cron ({'description': ['Schedule check requests using crontab syntax'], 'type': 'str'})
- env_vars ({'description': ['A mapping of environment variable names and values to use with command execution.'], 'type': 'dict'})
- handlers ({'description': ['List of handlers which receive check results.'], 'type': 'list'})
- high_flap_threshold ({'description': ['High flap threshold.'], 'type': 'int'})
- interval ({'description': ['Check request interval'], 'type': 'int'})
- labels ({'description': ['Custom metadata fields that can be accessed within Sensu, as key/value pairs.'], 'type': 'dict'})
- low_flap_threshold ({'description': ['Low flap threshold.'], 'type': 'int'})
- name ({'description': ["The Sensu object's name."], 'type': 'str', 'required': True})
- output_metric_format ({'description': ["Enable parsing of metrics in the specified format from this check's output."], 'type': 'str', 'choices': ['graphite_plaintext', 'influxdb_line', 'nagios_perfdata', 'opentsdb_line']})
- output_metric_handlers ({'description': ["List of handlers which receive check results. I'm not sure why this exists."], 'type': 'list'})
- proxy_entity_name ({'description': ['Entity name to associate this check with instead of the agent it ran on.'], 'type': 'str'})
- proxy_requests ({'description': 'Allows you to assign the check to run for multiple entities according to their entity_attributes', 'type': 'dict', 'suboptions': {'entity_attributes': {'description': ['List of attribute checks for determining which proxy entities this check should be scheduled against.'], 'type': 'list'}, 'splay': {'description': ['Enables or disables splaying of check request scheduling.'], 'type': 'bool'}, 'splay_coverage': {'description': ['Percentage of the C(interval) over which to splay checks.'], 'type': 'int'}}})
- publish ({'description': ['Enables or disables scheduled publication of check requests.'], 'type': 'bool'})
- round_robin ({'description': ['An array of environment variables to use with command execution.'], 'type': 'bool'})
- runtime_assets ({'description': ['List of runtime assets required to run the check'], 'type': 'list'})
- state ({'description': ['Target state of the Sensu object.'], 'type': 'str', 'choices': ['present', 'absent'], 'default': 'present'})
- stdin ({'description': ["Enables writing of serialized JSON data to the check command's stdin.", 'Only usable with checks written specifically for Sensu Go.'], 'type': 'bool'})
- subscriptions ({'description': ['List of subscriptions which receive check requests.'], 'type': 'list'})
- timeout ({'description': ['Check execution timeout'], 'type': 'int'})
- ttl ({'description': ['Amount of time after which a check result is considered stale.'], 'type': 'int'})




Examples
--------

.. code-block:: yaml+jinja

    
    - name: Check executing command every 30 seconds
      check:
        name: check
        command: check-cpu.sh -w 75 -c 90
        subscriptions:
          - checks
        interval: 30
        publish: yes

    - name: Check executing command with cron scheduler
      check:
        name: check
        command: check-cpu.sh -w 75 -c 90
        subscriptions:
          - systems
        handlers:
          - slack
        cron: "* * * * *"
        publish: yes

    - name: Ad-hoc scheduling
      check:
        name: check
        command: check-cpu.sh -w 75 -c 90
        subscriptions:
          - systems
        handlers:
          - slack
        interval: 60
        publish: no

    - name: Report events under proxy entity name instead of agent entity
      check:
        name: check
        command: http_check.sh https://sensu.io
        subscriptions:
          - proxy
        handlers:
          - slack
        interval: 60
        proxy_entity_name: sensu-site
        round_robin: yes
        publish: yes




Return Values
-------------

::
    
    object:
        description: object representing Sensu check
        returned: success
        type: dict


Status
------





Authors
~~~~~~~

- Paul Arthur (@flowerysong)
- Aljaz Kosir (@aljazkosir)
- Miha Plesko (@miha-plesko)
- Tadej Borovsak (@tadeboro)

